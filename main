import math
import os
import re
import asyncio
import datetime
import pytz
import pandas as pd
from urllib.parse import urlparse
from crowd_sdk.tagme import TagmeClientAdvanced
import sys

from numpy._core.multiarray import item


class TaskHandler:
    def __init__(self, url: str):
        self._host = urlparse(url).netloc
        self._org_id = urlparse(url).path.split('/')[2]
        self._project_id = urlparse(url).path.split('/')[4]
        self._task_id = urlparse(url).path.split('/')[6]

        # self.reference_data = 'referens_data/reference_data.xlsx'
        self.client = TagmeClientAdvanced(self.get_config_path())

    def get_config_path(self) -> str:
        configs = {
            'tagme.apps.prom-gen.sigma.sbrf.ru': '~/configs/.sigma.cfg',
            'tagme.sberdevices.ru': '~/configs/.cloud.cfg'
        }

        return os.path.expanduser(configs[self._host])

    async def get_assigments(self):
        task_info = await self.client.get_task_assignments(task_id=self._task_id,
                                               organization_id=self._org_id)
        print(task_info)
        return task_info
    async def save_excel(self, task_info):
        data = []
        for assignment in task_info:
            file_name = assignment.file_name
            url = assignment.url
            data.append([file_name, url])
        df = pd.DataFrame(data)
        df.to_excel(f'task_{self._task_id}.xlsx', index=False)
        print('Файл создан')

    # print(df)
async def main():
    task_url = input('Введите ссылку на задачу:\n')
    task_handler = TaskHandler(task_url)
    task_info = await task_handler.get_assigments()
    # creat = await task_handler.get_filename()
    await task_handler.save_excel(task_info)


if __name__ == '__main__':
    asyncio.run(main())
